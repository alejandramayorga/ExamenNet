{"ast":null,"code":"import { FormArray, FormControl } from '@angular/forms';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction TiendaArticulosComponent_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r0.tiendas[i_r3].id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.tiendas[i_r3].name, \" \");\n  }\n}\n\nfunction TiendaArticulosComponent_label_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 6);\n    i0.ɵɵelement(1, \"input\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r5 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", i_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.ordersData[i_r5].name, \" \");\n  }\n}\n\nexport class TiendaArticulosComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.ordersData = [{\n      id: 100,\n      name: 'order 1'\n    }, {\n      id: 200,\n      name: 'order 2'\n    }, {\n      id: 300,\n      name: 'order 3'\n    }, {\n      id: 400,\n      name: 'order 4'\n    }];\n    this.tiendas = [{\n      id: number,\n      name\n    }];\n    this.formc = this.formBuilder.group({\n      orders: new FormArray([]),\n      tiendas: ['']\n    });\n    this.addCheckboxes(); // async orders\n\n    of(this.getOrders()).subscribe(tiendas => {\n      this.tiendas = tiendas;\n      this.formc.controls.tiendas.patchValue(this.tiendas[0].id);\n    });\n    this.tiendas = this.getOrders();\n    this.formc.controls.orders.patchValue(this.tiendas[0].id);\n  }\n\n  get ordersFormArray() {\n    return this.formc.controls.orders;\n  }\n\n  addCheckboxes() {\n    this.ordersData.forEach(() => this.ordersFormArray.push(new FormControl(false)));\n  }\n\n  getOrders() {\n    return [{\n      id: '1',\n      name: 'order 1'\n    }, {\n      id: '2',\n      name: 'order 2'\n    }, {\n      id: '3',\n      name: 'order 3'\n    }, {\n      id: '4',\n      name: 'order 4'\n    }];\n  }\n\n  submit() {\n    const selectedOrderIds = this.formc.value.orders.map((checked, i) => checked ? this.ordersData[i].id : null).filter(v => v !== null);\n    console.log(selectedOrderIds);\n  }\n\n}\n\nTiendaArticulosComponent.ɵfac = function TiendaArticulosComponent_Factory(t) {\n  return new (t || TiendaArticulosComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n\nTiendaArticulosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TiendaArticulosComponent,\n  selectors: [[\"app-tienda-articulos\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"orders\"], [\"formControlName\", \"orders\", \"id\", \"orders\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formArrayName\", \"orders\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"formArrayName\", \"orders\"], [\"type\", \"checkbox\", 3, \"formControlName\"]],\n  template: function TiendaArticulosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function TiendaArticulosComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Tienda\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"select\", 2);\n      i0.ɵɵtemplate(4, TiendaArticulosComponent_option_4_Template, 2, 2, \"option\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, TiendaArticulosComponent_label_5_Template, 4, 2, \"label\", 4);\n      i0.ɵɵelement(6, \"br\")(7, \"br\");\n      i0.ɵɵelementStart(8, \"button\");\n      i0.ɵɵtext(9, \"submit\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.formc);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tiendas);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.ordersFormArray.controls);\n    }\n  },\n  dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormArrayName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0aWVuZGEtYXJ0aWN1bG9zLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAGEA,SAHF,EAIEC,WAJF,QAMO,gBANP;AAOA,SAASC,EAAT,QAAmB,MAAnB;;;;;;;ICLMC;IACEA;IACFA;;;;;;IAFqDA;IACnDA;IAAAA;;;;;;IAIJA;IACEA;IACAA;IACAA;IACFA;;;;;;IAHyBA;IAAAA;IACvBA;IAAAA;;;;ADKN,OAAM,MAAOC,wBAAP,CAA+B;EAenCC,YAAoBC,WAApB,EAA4C;IAAxB;IAZpB,kBAAa,CACX;MAAEC,EAAE,EAAE,GAAN;MAAWC,IAAI,EAAE;IAAjB,CADW,EAEX;MAAED,EAAE,EAAE,GAAN;MAAWC,IAAI,EAAE;IAAjB,CAFW,EAGX;MAAED,EAAE,EAAE,GAAN;MAAWC,IAAI,EAAE;IAAjB,CAHW,EAIX;MAAED,EAAE,EAAE,GAAN;MAAWC,IAAI,EAAE;IAAjB,CAJW,CAAb;IAMA,eAAU,CAAC;MAACD,EAAE,EAACE,MAAJ;MAAWD;IAAX,CAAD,CAAV;IAOE,KAAKE,KAAL,GAAa,KAAKJ,WAAL,CAAiBK,KAAjB,CAAuB;MAClCC,MAAM,EAAE,IAAIZ,SAAJ,CAAc,EAAd,CAD0B;MAElCa,OAAO,EAAE,CAAC,EAAD;IAFyB,CAAvB,CAAb;IAKA,KAAKC,aAAL,GAN0C,CAQtC;;IACAZ,EAAE,CAAC,KAAKa,SAAL,EAAD,CAAF,CAAqBC,SAArB,CAA+BH,OAAO,IAAG;MACvC,KAAKA,OAAL,GAAeA,OAAf;MACA,KAAKH,KAAL,CAAWO,QAAX,CAAoBJ,OAApB,CAA4BK,UAA5B,CAAuC,KAAKL,OAAL,CAAa,CAAb,EAAgBN,EAAvD;IACD,CAHD;IAKJ,KAAKM,OAAL,GAAe,KAAKE,SAAL,EAAf;IACA,KAAKL,KAAL,CAAWO,QAAX,CAAoBL,MAApB,CAA2BM,UAA3B,CAAsC,KAAKL,OAAL,CAAa,CAAb,EAAgBN,EAAtD;EACD;;EApBkB,IAAfY,eAAe;IACjB,OAAO,KAAKT,KAAL,CAAWO,QAAX,CAAoBL,MAA3B;EACD;;EAoBOE,aAAa;IACnB,KAAKM,UAAL,CAAgBC,OAAhB,CAAwB,MAAM,KAAKF,eAAL,CAAqBG,IAArB,CAA0B,IAAIrB,WAAJ,CAAgB,KAAhB,CAA1B,CAA9B;EACD;;EAIDc,SAAS;IACP,OAAO,CACL;MAAER,EAAE,EAAE,GAAN;MAAWC,IAAI,EAAE;IAAjB,CADK,EAEL;MAAED,EAAE,EAAE,GAAN;MAAWC,IAAI,EAAE;IAAjB,CAFK,EAGL;MAAED,EAAE,EAAE,GAAN;MAAWC,IAAI,EAAE;IAAjB,CAHK,EAIL;MAAED,EAAE,EAAE,GAAN;MAAWC,IAAI,EAAE;IAAjB,CAJK,CAAP;EAMD;;EAEDe,MAAM;IACJ,MAAMC,gBAAgB,GAAG,KAAKd,KAAL,CAAWe,KAAX,CAAiBb,MAAjB,CACtBc,GADsB,CAClB,CAACC,OAAD,EAAoBC,CAApB,KAAkCD,OAAO,GAAG,KAAKP,UAAL,CAAgBQ,CAAhB,EAAmBrB,EAAtB,GAA2B,IADlD,EAEtBsB,MAFsB,CAEdC,CAAD,IAAaA,CAAC,KAAK,IAFJ,CAAzB;IAGAC,OAAO,CAACC,GAAR,CAAYR,gBAAZ;EACD;;AArDkC;;;mBAAxBpB,0BAAwBD;AAAA;;;QAAxBC;EAAwB6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfrClC;MAA0BA;QAAA,OAAYmC,YAAZ;MAAoB,CAApB;MACtBnC;MAAoBA;MAAMA;MAC1BA;MACEA;MAGFA;MAEAA;MAKEA,sBAAI,CAAJ,EAAI,IAAJ;MACJA;MAAQA;MAAMA;;;;MAdVA;MAG0BA;MAAAA;MAKoBA;MAAAA","names":["FormArray","FormControl","of","i0","TiendaArticulosComponent","constructor","formBuilder","id","name","number","formc","group","orders","tiendas","addCheckboxes","getOrders","subscribe","controls","patchValue","ordersFormArray","ordersData","forEach","push","submit","selectedOrderIds","value","map","checked","i","filter","v","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\juanito\\source\\repos\\ExamenNet\\ExamenNet\\ClientApp\\src\\app\\tienda-articulos\\tienda-articulos.component.ts","C:\\Users\\juanito\\source\\repos\\ExamenNet\\ExamenNet\\ClientApp\\src\\app\\tienda-articulos\\tienda-articulos.component.html"],"sourcesContent":["import { Component} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormArray,\n  FormControl,\n  ValidatorFn\n} from '@angular/forms';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-tienda-articulos',\n  templateUrl: './tienda-articulos.component.html',\n  styleUrls: ['./tienda-articulos.component.css']\n})\nexport class TiendaArticulosComponent  {\n\n  formc: FormGroup;\n  ordersData = [\n    { id: 100, name: 'order 1' },\n    { id: 200, name: 'order 2' },\n    { id: 300, name: 'order 3' },\n    { id: 400, name: 'order 4' }\n  ];\n  tiendas = [{id:number,name} ];\n\n  get ordersFormArray() {\n    return this.formc.controls.orders as FormArray;\n  }\n\n  constructor(private formBuilder: FormBuilder) {\n    this.formc = this.formBuilder.group({\n      orders: new FormArray([]),\n      tiendas: ['']\n    });\n\n    this.addCheckboxes();\n\n        // async orders\n        of(this.getOrders()).subscribe(tiendas => {\n          this.tiendas = tiendas;\n          this.formc.controls.tiendas.patchValue(this.tiendas[0].id);\n        });\n\n    this.tiendas = this.getOrders();\n    this.formc.controls.orders.patchValue(this.tiendas[0].id);\n  }\n\n  private addCheckboxes() {\n    this.ordersData.forEach(() => this.ordersFormArray.push(new FormControl(false)));\n  }\n\n\n\n  getOrders() {\n    return [\n      { id: '1', name: 'order 1' },\n      { id: '2', name: 'order 2' },\n      { id: '3', name: 'order 3' },\n      { id: '4', name: 'order 4' }\n    ];\n  }\n\n  submit() {\n    const selectedOrderIds = this.formc.value.orders\n      .map((checked:  boolean, i: number) => checked ? this.ordersData[i].id : null)\n      .filter((v: null) => v !== null);\n    console.log(selectedOrderIds);\n  }\n}\n","<form [formGroup]=\"formc\" (ngSubmit)=\"submit()\">\n    <label for=\"orders\">Tienda</label>\n    <select formControlName=\"orders\" id=\"orders\">\n      <option *ngFor=\"let order of tiendas; let i = index\" [value]=\"tiendas[i].id\">\n        {{tiendas[i].name}}\n      </option>\n    </select>\n\n    <label formArrayName=\"orders\" *ngFor=\"let order of ordersFormArray.controls; let i = index\">\n      <input type=\"checkbox\" [formControlName]=\"i\">\n      {{ordersData[i].name}}\n      <br>\n    </label>\n      <br><br>\n  <button>submit</button>\n  </form>"]},"metadata":{},"sourceType":"module"}